
# Fitness and Nutrition App Project Report

**Date:** 2024-12-06

## Project Overview
The Fitness and Nutrition App is designed to help users manage their health and wellness. It includes features for generating personalized fitness and meal plans, logging daily activities and meals, and syncing data from wearable devices.

### Features:
1. Input personal health data.
2. Generate personalized fitness plans.
3. Generate personalized meal plans.
4. Log daily activities and meals.
5. Sync health data from wearable devices.

---

## UML Diagrams
### Use Case Diagram
- Actors: User, Wearable Device.
- Use Cases: Input Health Data, Generate Fitness Plan, Generate Meal Plan, Log Activities and Meals, Sync Device Data.

### Class Diagram
Classes:
- `User`: Manages user data and interactions.
- `FitnessPlan`: Represents fitness plan details.
- `MealPlan`: Represents meal plan details.
- `DeviceSync`: Manages wearable device syncing.

Relationships:
- `User` interacts with `FitnessPlan`, `MealPlan`, and `DeviceSync`.

---

## Java Classes
### User Class
The `User` class represents a user of the app and provides methods to interact with fitness and meal plans.

### FitnessPlan Class
The `FitnessPlan` class stores and displays details about a personalized fitness plan.

### MealPlan Class
The `MealPlan` class stores and displays details about a personalized meal plan.

### DeviceSync Class
The `DeviceSync` class synchronizes health data from wearable devices.

### Main Class
The `Main` class implements the logic for interacting with all other classes and simulates user interactions.

---

## Code Implementation
The following code implements the Fitness and Nutrition App:

```java
// Main.java
public class Main Ellipsis

// User.java
class User Ellipsis

// FitnessPlan.java
class FitnessPlan Ellipsis

// MealPlan.java
class MealPlan Ellipsis

// DeviceSync.java
class DeviceSync Ellipsis
```

---

## Testing and Output
### Steps to Test:
1. Compile the program using `javac *.java`.
2. Run the program using `java Main`.
3. Verify the output for correctness.

### Expected Output:
```
Health data updated.
Fitness Plan ID: FP001
Activities: Running, Weightlifting
Duration: 30 days
Calories Burned: 5000
Meal Plan ID: MP001
Meals: Breakfast: Oats, Lunch: Chicken Salad
Total Calories: 2000
Synchronizing data from Fitbit for user John Doe
Data synchronized successfully!
```

---

## Conclusion
This project demonstrates object-oriented programming principles in Java, including encapsulation, inheritance, and class interaction. The app is a simplified representation of a real-world fitness and nutrition management system.

**Future Work:**
- Add a GUI interface for better user interaction.
- Incorporate database storage for persistent data.
- Expand fitness and meal plan algorithms.

---

**Prepared by:** Destiny Okpara
